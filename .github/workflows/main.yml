name: 构建

env:
  kernel_repository: LineageOS/android_kernel_xiaomi_sdm845
  kernel_branch: lineage-22.1
  device: dipper
  clang_version: r365631c
  defconfig: |
    dipper_defconfig

on: [ push, pull_request ]

jobs:
  build:
    name: 构建内核
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: 安装依赖
        run: |
          sudo apt update
          sudo apt install -y \
              binutils-arm-linux-gnueabi \
              binutils-aarch64-linux-gnu

      - name: 同步内核源码
        uses: actions/checkout@v4
        with:
          repository: ${{ env.kernel_repository }}
          ref: ${{ env.kernel_branch }}

      - name: 同步本仓库
        uses: actions/checkout@v4
        with:
          path: this-repo
      
      - name: 复制自定义配置
        run: cp this-repo/dipper_defconfig arch/arm64/configs/
      
      - name: 合并defconfig
        run: |
          while read -r line; do
              if [ -z "$line" ] || [[ "$line" == "#"* ]]; then
                  continue
              fi
              echo "Merging defconfig: $line"
              cat arch/arm64/configs/$line >>arch/arm64/configs/merged_defconfig
          done <<<"$defconfig"

      - name: 设置 KernelSU
        run: |
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s v0.9.5
        
          # curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -
          # curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next-susfs/kernel/setup.sh" | bash -s next-susfs
          # cp $GITHUB_WORKSPACE/this-repo/patches/KernelSU/10_enable_susfs_for_ksu.patch KernelSU-Next/
          # cp $GITHUB_WORKSPACE/this-repo/patches/50_add_susfs_in_kernel-4.9.patch ./
          # cp $GITHUB_WORKSPACE/this-repo/patches/fs/susfs.c fs/
          # cp $GITHUB_WORKSPACE/this-repo/patches/include/linux/susfs.h include/linux/
          
      # - name: 应用ksu susfs补丁
        # run: |
          # cd $GITHUB_WORKSPACE/KernelSU-Next && patch -p1 < 10_enable_susfs_for_ksu.patch || true
          # cp $GITHUB_WORKSPACE/this-repo/Makefile kernel/
          # cp $GITHUB_WORKSPACE/this-repo/kernel_compat.h kernel/
          # cp $GITHUB_WORKSPACE/this-repo/ksu.c kernel/

      # - name: 应用kernel susfs补丁
        # run: |
          # cd $GITHUB_WORKSPACE && patch -p1 <  50_add_susfs_in_kernel-4.9.patch
          
      - name: "AOSP-Clang: Restore"
        id: aosp_clang_restore
        uses: actions/cache/restore@v4
        with:
          path: aosp-clang
          key: aosp-clang-${{ env.clang_version }}

      - name: "AOSP-Clang: Download"
        id: aosp_clang_download
        if: env.clang_type == 'aosp' && steps.aosp_clang_restore.outputs.cache-hit != 'true'
        run: |
          mkdir -p aosp-clang
          curl -L https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/android11-release/clang-r365631c.tar.gz | tar xz -C aosp-clang

      - name: "AOSP-Clang: Save"
        id: aosp_clang_save
        if: env.clang_type == 'aosp' && steps.aosp_clang_download.outcome == 'success'
        uses: actions/cache/save@v4
        with:
          path: aosp-clang
          key: aosp-clang-${{ env.clang_version }}

      - name: "AOSP-Clang: Setup"
        run: |
          echo PATH=$(pwd)/aosp-clang/bin:$PATH | tee -a $GITHUB_ENV

      - name: 配置编译变量
        run: |
          echo flags=" \
          O=out \
          ARCH=arm64 \
          LLVM=1 \
          LLVM_IAS=1 \
          CROSS_COMPILE=aarch64-linux-gnu- \
          CROSS_COMPILE_ARM32=arm-linux-gnueabi-
          " | tee -a $GITHUB_ENV

      - name: 生成配置
        run: |
          make $flags merged_defconfig

      - name: 构建
        run: |
          make $flags -j$(nproc --all)

      - name: AnyKernel3
        run: |
          curl -Lo AnyKernel3.zip https://github.com/osm0sis/AnyKernel3/archive/refs/heads/master.zip
          unzip AnyKernel3.zip

          cat >AnyKernel3-master/anykernel.sh <<EOF
          properties() { '
          kernel.string=$kernel_repository $kernel_branch with KernelSU $kernelsu_remote_version for $device
          do.devicecheck=1
          do.modules=0
          do.cleanup=1
          do.cleanuponabort=1
          device.name1=$device
          '; }

          block=auto
          is_slot_device=auto
          ramdisk_compression=auto
          patch_vbmeta_flag=auto

          . tools/ak3-core.sh
          split_boot
          flash_boot
          EOF

          cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3-master/
          if [ -f out/arch/arm64/boot/dtbo.img ]; then
              cp out/arch/arm64/boot/dtbo.img AnyKernel3-master/
          fi

          cd AnyKernel3-master
          rm -rf .git* README.md
          zip -r ../boot.zip *

      - name: 上传输出文件
        uses: actions/upload-artifact@v4
        with:
          name: boot
          path: AnyKernel3-master/*

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: Release
          body: |
            Device:
            ${{ env.device }}

            Kernel:
            https://github.com/${{ env.kernel_repository }}/tree/${{ env.kernel_commit_id }}

            Branch:
            ${{ env.kernel_branch }}
            
          files: |
            boot.zip
